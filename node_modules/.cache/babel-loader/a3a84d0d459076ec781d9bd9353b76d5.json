{"ast":null,"code":"import _defineProperty from\"/home/sumeet/Desktop/New Folder/Qkart/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/sumeet/Desktop/New Folder/Qkart/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/home/sumeet/Desktop/New Folder/Qkart/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/sumeet/Desktop/New Folder/Qkart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/sumeet/Desktop/New Folder/Qkart/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// eslint-disable-next-line\nimport{ConnectingAirportsOutlined}from\"@mui/icons-material\";import{Button,CircularProgress,Stack,TextField,Box}from\"@mui/material\";import axios from\"axios\";import{useSnackbar}from\"notistack\";import React,{useState,useEffect}from\"react\";import{useHistory,Link}from\"react-router-dom\";import{config}from\"../App\";import Footer from\"./Footer\";import Header from\"./Header\";import\"./Login.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var forminit={username:\"\",password:\"\"};var _useState=useState(forminit),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setform=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoding=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),success=_useState6[0],setSuccess=_useState6[1];var history=useHistory();// TODO: CRIO_TASK_MODULE_LOGIN - Fetch the API response\n/**\n   * Perform the Login API call\n   * @param {{ username: string, password: string }} formData\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * API endpoint - \"POST /auth/login\"\n   *\n   * Example for successful response from backend:\n   * HTTP 201\n   * {\n   *      \"success\": true,\n   *      \"token\": \"testtoken\",\n   *      \"username\": \"criodo\",\n   *      \"balance\": 5000\n   * }\n   *\n   * Example for failed response from backend:\n   * HTTP 400\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Password is incorrect\"\n   * }\n   *\n   */ // eslint-disable-next-line\nuseEffect(function(){if(success){history.push('/');}},[success,history]);var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(formData){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoding(true);if(!validateInput(formData)){_context.next=4;break;}_context.next=4;return axios.post(\"\".concat(config.endpoint,\"/auth/login\"),{username:formData.username,password:formData.password}).then(function(res){// console.log(res.data.success)\n// console.log(res.data.username)\n// console.log(res.data.balance);\n// history.push(\"/\")\nif(res.data.success){enqueueSnackbar(\"Logged in\",{variant:\"success\"});persistLogin(res.data.token,res.data.username,res.data.balance);setSuccess(true);}}).catch(function(e){if(!e.response.data.success&&e.response.status===400){enqueueSnackbar(e.response.data.message,{varient:\"error\"});}});case 4:setIsLoding(false);case 5:case\"end\":return _context.stop();}}},_callee);}));return function login(_x){return _ref.apply(this,arguments);};}();// TODO: CRIO_TASK_MODULE_LOGIN - Validate the input\n/**\n   * Validate the input values so that any bad or illegal values are not passed to the backend.\n   *\n   * @param {{ username: string, password: string }} data\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * @returns {boolean}\n   *    Whether validation has passed or not\n   *\n   * Return false and show warning message if any validation condition fails, otherwise return true.\n   * (NOTE: The error messages to be shown for each of these cases, are given with them)\n   * -    Check that username field is not an empty value - \"Username is a required field\"\n   * -    Check that password field is not an empty value - \"Password is a required field\"\n   */ // eslint-disable-next-line\nvar validateInput=function validateInput(data){if(!data.username){enqueueSnackbar(\"Username is a required field\",{variant:\"error\"});return false;}if(!data.password){enqueueSnackbar(\"Password is a required field\",{variant:\"error\"});return false;}return true;};// TODO: CRIO_TASK_MODULE_LOGIN - Persist user's login information\n/**\n   * Store the login information so that it can be used to identify the user in subsequent API calls\n   *\n   * @param {string} token\n   *    API token used for authentication of requests after logging in\n   * @param {string} username\n   *    Username of the logged in user\n   * @param {string} balance\n   *    Wallet balance amount of the logged in user\n   *\n   * Make use of localStorage: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n   * -    `token` field in localStorage can be used to store the Oauth token\n   * -    `username` field in localStorage can be used to store the username that the user is logged in as\n   * -    `balance` field in localStorage can be used to store the balance amount in the user's wallet\n   */ // eslint-disable-next-line\nvar persistLogin=function persistLogin(token,username,balance){localStorage.setItem(\"token\",token);localStorage.setItem(\"username\",username);localStorage.setItem(\"balance\",balance);};var handelchange=function handelchange(e){var value=e.target.value;var name=e.target.name;setform(_objectSpread(_objectSpread({},formData),{},_defineProperty({},name,value)));};return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",minHeight:\"100vh\",children:[/*#__PURE__*/_jsx(Header,{hasHiddenAuthButtons:true}),/*#__PURE__*/_jsx(Box,{className:\"content\",children:/*#__PURE__*/_jsxs(Stack,{spacing:2,className:\"form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Login\"}),/*#__PURE__*/_jsx(TextField,{id:\"username\",label:\"Username\",variant:\"outlined\",title:\"Username\",name:\"username\",onChange:handelchange,fullWidth:true}),/*#__PURE__*/_jsx(TextField,{id:\"password\",variant:\"outlined\",label:\"Password\",name:\"password\",type:\"password\",fullWidth:true,onChange:handelchange}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(e){e.preventDefault();login(formData);},className:\"button\",variant:\"contained\",children:\"LOGIN TO QKART\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"secondary-action\",children:[\"Don\\u2019t have an account?\",\" \",/*#__PURE__*/_jsx(Link,{className:\"link\",to:\"/register\",children:\"Register now\"})]})]})}),/*#__PURE__*/_jsx(Footer,{})]});};export default Login;","map":{"version":3,"names":["ConnectingAirportsOutlined","Button","CircularProgress","Stack","TextField","Box","axios","useSnackbar","React","useState","useEffect","useHistory","Link","config","Footer","Header","Login","enqueueSnackbar","forminit","username","password","formData","setform","isLoading","setIsLoding","success","setSuccess","history","push","login","validateInput","post","endpoint","then","res","data","variant","persistLogin","token","balance","catch","e","response","status","message","varient","localStorage","setItem","handelchange","value","target","name","preventDefault"],"sources":["/home/sumeet/Desktop/New Folder/Qkart/src/components/Login.js"],"sourcesContent":["// eslint-disable-next-line\nimport { ConnectingAirportsOutlined } from \"@mui/icons-material\";\nimport { Button, CircularProgress, Stack, TextField,Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useState,useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { config } from \"../App\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const forminit = {\n    username: \"\",\n    password: \"\",\n  };\n  const [formData, setform] = useState(forminit);\n  const [isLoading, setIsLoding] = useState(false);\n  const [success,setSuccess]=useState(false);\n  const history = useHistory();\n\n  // TODO: CRIO_TASK_MODULE_LOGIN - Fetch the API response\n  /**\n   * Perform the Login API call\n   * @param {{ username: string, password: string }} formData\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * API endpoint - \"POST /auth/login\"\n   *\n   * Example for successful response from backend:\n   * HTTP 201\n   * {\n   *      \"success\": true,\n   *      \"token\": \"testtoken\",\n   *      \"username\": \"criodo\",\n   *      \"balance\": 5000\n   * }\n   *\n   * Example for failed response from backend:\n   * HTTP 400\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Password is incorrect\"\n   * }\n   *\n   */\n  // eslint-disable-next-line\n  useEffect(()=>{\n    if(success){\n      history.push('/');\n    }\n  },[success,history])\n  const login = async (formData) => {\n    setIsLoding(true);\n    if (validateInput(formData)) {\n      await axios\n        .post(`${config.endpoint}/auth/login`, {\n          username: formData.username,\n          password: formData.password,\n        })\n        .then((res) => {\n          // console.log(res.data.success)\n          // console.log(res.data.username)\n          // console.log(res.data.balance);\n          // history.push(\"/\")\n          if (res.data.success) {\n            enqueueSnackbar(\"Logged in\", {\n              variant: \"success\",\n            });\n            persistLogin(\n              res.data.token,\n              res.data.username,\n              res.data.balance\n            );\n            setSuccess(true);\n          }\n        })\n        .catch((e) => {\n          if(!e.response.data.success&&e.response.status===400){\n            enqueueSnackbar(e.response.data.message,{varient:\"error\"})\n          }\n        });\n    }\n      setIsLoding(false);\n      \n  };\n\n  // TODO: CRIO_TASK_MODULE_LOGIN - Validate the input\n  /**\n   * Validate the input values so that any bad or illegal values are not passed to the backend.\n   *\n   * @param {{ username: string, password: string }} data\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * @returns {boolean}\n   *    Whether validation has passed or not\n   *\n   * Return false and show warning message if any validation condition fails, otherwise return true.\n   * (NOTE: The error messages to be shown for each of these cases, are given with them)\n   * -    Check that username field is not an empty value - \"Username is a required field\"\n   * -    Check that password field is not an empty value - \"Password is a required field\"\n   */\n  // eslint-disable-next-line\n  const validateInput = (data) => {\n    if (!data.username) {\n      enqueueSnackbar(\"Username is a required field\", { variant: \"error\" });\n      return false;\n    }\n    if (!data.password) {\n      enqueueSnackbar(\"Password is a required field\", { variant: \"error\" });\n      return false;\n    }\n    return true;\n  };\n\n  // TODO: CRIO_TASK_MODULE_LOGIN - Persist user's login information\n  /**\n   * Store the login information so that it can be used to identify the user in subsequent API calls\n   *\n   * @param {string} token\n   *    API token used for authentication of requests after logging in\n   * @param {string} username\n   *    Username of the logged in user\n   * @param {string} balance\n   *    Wallet balance amount of the logged in user\n   *\n   * Make use of localStorage: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n   * -    `token` field in localStorage can be used to store the Oauth token\n   * -    `username` field in localStorage can be used to store the username that the user is logged in as\n   * -    `balance` field in localStorage can be used to store the balance amount in the user's wallet\n   */\n  // eslint-disable-next-line\n  const persistLogin = (token, username, balance) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"balance\", balance);\n  };\n\n  const handelchange = (e) => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setform({ ...formData, [name]: value });\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      minHeight=\"100vh\"\n    >\n      <Header hasHiddenAuthButtons={true} />\n      <Box className=\"content\">\n        <Stack spacing={2} className=\"form\">\n          <h2 className=\"title\">Login</h2>\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n            title=\"Username\"\n            name=\"username\"\n            onChange={handelchange}\n            fullWidth\n          />\n          <TextField\n            id=\"password\"\n            variant=\"outlined\"\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            fullWidth\n            onChange={handelchange}\n          />\n          {isLoading ? (\n            <div className=\"loading\">\n              <CircularProgress />\n            </div>\n          ) : (\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                login(formData);\n              }}\n              className=\"button\"\n              variant=\"contained\"\n            >\n              LOGIN TO QKART\n            </Button>\n          )}\n          <p className=\"secondary-action\">\n            Don’t have an account?{\" \"}\n            <Link className=\"link\" to={`/register`}>\n              Register now\n            </Link>\n          </p>\n        </Stack>\n      </Box>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}